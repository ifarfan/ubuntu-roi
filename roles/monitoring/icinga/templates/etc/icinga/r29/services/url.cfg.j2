#===============================================================================
#
#  U R L . C F G
#
#===============================================================================
define servicegroup{
        servicegroup_name       url-checks
        alias                   URL Checks
}


        #=============================================
        #  Service:  WWW Homepage
        #=============================================
        define service {
                service_description      URL: WWW Homepage [External]
                servicegroups            url-checks
                hostgroup_name           r29sites                               ; Checking external site
                check_command            check_url_www_homepage1
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_www_homepage
                contacts                 pagerduty-service-waking-critical, pagerduty-service-sleeping-critical
                notes                    Check the R29 homepage (www.refinery29.com) and look for "Connect with R29" to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_www_homepage1
                command_line             $USER1$/check_http -H 'www.refinery29.com' -p 80 -u '/' -s 'Connect with R29' -w 5 -c 10 -t 30
        }
        define service {
                service_description      URL: WWW Homepage
                servicegroups            url-checks
                hostgroup_name           web, fw                                ; Checking web servers
                check_command            check_url_www_homepage2
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_www_homepage
                notes                    Check the R29 homepage (www.refinery29.com) and look for "Connect with R29" in the footer to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_www_homepage2
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'www.refinery29.com' -p 80 -u '/' -s 'Connect with R29' -w 5 -c 10 -t 30
        }


        #=============================================
        #  Service:  DASH/Admin Homepage
        #=============================================
        define service {
                service_description      URL: Dash Admin Homepage [External]
                servicegroups            url-checks
                hostgroup_name           r29sites                               ; Checking external site
                check_command            check_url_dash_homepage1
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_dash_homepage
                contacts                 pagerduty-service-waking-critical, pagerduty-service-sleeping-critical
                notes                    Check the R29 Dash login page (dash.refinery29.com/login) and look for "Password" in the footer to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_dash_homepage1
                command_line             $USER1$/check_http -H 'dash.refinery29.com' -S -u '/login' -s 'Password' -w 5 -c 10 -t 30
        }
        define service {
                service_description      URL: Dash Admin Homepage
                servicegroups            url-checks
                hostgroup_name           web, fw                                ; Checking web servers (no SSL)
                check_command            check_url_dash_homepage2
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_dash_homepage
                notes                    Check the R29 Dash login page (dash.refinery29.com/login) and look for "Password" in the footer to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_dash_homepage2
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'dash.refinery29.com' -u '/login' -s 'Password' -w 5 -c 10 -t 30 --header='X-Forwarded-Proto: https'          ; restore color syntax:
        }


        #=============================================
        #  Service:  Mobile/Feed Homepage
        #=============================================
        define service {
                service_description      URL: Feed Homepage [External]
                servicegroups            url-checks
                hostgroup_name           r29sites                               ; Checking external site
                check_command            check_url_feed_homepage1
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_feed_homepage
                contacts                 pagerduty-service-waking-critical, pagerduty-service-sleeping-critical
                notes                    Check the R29 mobile homepage (feed.refinery29.com/) and look for "Menu" in the footer to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_feed_homepage1
                command_line             $USER1$/check_http -H 'feed.refinery29.com' -p 80 -u '/' -s 'Menu' -w 5 -c 10 -t 30
        }
        define service {
                service_description      URL: Feed Homepage
                servicegroups            url-checks
                hostgroup_name           api, app, fw                                ; Checking api servers
                check_command            check_url_feed_homepage2
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_feed_homepage
                notes                    Check the R29 mobile homepage (feed.refinery29.com/) and look for "Menu" in the footer to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_feed_homepage2
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'feed.refinery29.com' -p 80 -u '/' -s 'Menu' -w 5 -c 10 -t 30
        }


        #=============================================
        #  Service:  Mobile/Feed API Endpoint
        #=============================================
        define service {
                service_description      URL: Feed API Endpoint [External]
                servicegroups            url-checks
                hostgroup_name           r29sites                               ; Checking external site
                check_command            check_url_feed_api_endpoint1
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_feed_endpoint
                notes                    Check the R29 Feed API endpoint (www.refinery29.com/api/2/feeds/) and look for "card_ids" in source content to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_feed_api_endpoint1
                command_line             $USER1$/check_http -H 'www.refinery29.com' -p 80 -u '/api/2/feeds/' -s 'card_ids' -w 5 -c 10 -t 30
        }
        define service {
                service_description      URL: Feed API Endpoint
                servicegroups            url-checks
                hostgroup_name           api, app, fw                                ; Checking api servers
                check_command            check_url_feed_api_endpoint2
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_feed_endpoint
                notes                    Check the R29 Feed API endpoint (www.refinery29.com/api/2/feeds) and look for "card_ids" in source content to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_feed_api_endpoint2
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'www.refinery29.com' -p 80 -u '/api/2/feeds' -s 'card_ids' -w 5 -c 10 -t 30
        }


        #=============================================
        #  Service:  Feed/Rocketship API Endpoint
        #=============================================
        define service {
                service_description      URL: Feed/Rocketship Collection [External]
                servicegroups            url-checks
                hostgroup_name           r29sites                               ; Checking external site
                check_command            check_url_feed_api_large1
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_feed_rocketship
                notes                    Check the R29 Feed/Rocketship API endpoint (www.refinery29.com/api/2/feeds/celestial-inspired-items) and look for "card_ids" in source content to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_feed_api_large1
                command_line             $USER1$/check_http -H 'www.refinery29.com' -p 80 -u '/api/2/feeds/celestial-inspired-items' -s 'card_ids' -w 15 -c 25 -t 40
        }
        define service {
                service_description      URL: Feed/Rocketship Collection
                servicegroups            url-checks
                hostgroup_name           api, app, fw                                ; Checking api servers
                check_command            check_url_feed_api_large2
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_feed_rocketship
                notes                    Check the R29 Feed/Rocketship API endpoint (www.refinery29.com/api/2/feeds/celestial-inspired-items) and look for "card_ids" in source content to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_feed_api_large2
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'www.refinery29.com' -p 80 -u '/api/2/feeds/celestial-inspired-items' -s 'card_ids' -w 15 -c 25 -t 40
        }


        #=============================================
        #  Service:  Rocketship Products
        #=============================================
        define service {
                service_description      URL: Rocketship Products [External]
                servicegroups            url-checks
                hostgroup_name           r29sites                               ; Checking external site
                check_command            check_url_rocketship_homepage1
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_rocketship_homepage
                notes                    Check the R29 Rocketship products page (www.refinery29.com/shops/api/1/products) and look for "recordCount" in source content to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_rocketship_homepage1
                command_line             $USER1$/check_http -H 'www.refinery29.com' -p 80 -u '/shops/api/1/products' -s 'recordCount' -w 5 -c 10 -t 30
        }
        define service {
                service_description      URL: Rocketship Products
                servicegroups            url-checks
                hostgroup_name           api, app, fw                                ; Checking api servers
                check_command            check_url_rocketship_homepage2
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_rocketship_homepage
                notes                    Check the R29 Rocketship products page (www.refinery29.com/shops/api/1/products) and look for "recordCount" in source content to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_rocketship_homepage2
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'www.refinery29.com' -p 80 -u '/shops/api/1/products' -s 'recordCount' -w 5 -c 10 -t 30
        }


        #=============================================
        #  Service:  Varnish URL Ping
        #=============================================
        define service {
                service_description      URL: Varnish health ping
                servicegroups            url-checks, fw-daemon-checks
                hostgroup_name           api, app, web                               ; Checking web servers
                check_command            check_url_varnish_ping
                check_interval           2                                      ; Check more often
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_varnish_ping
                notes                    Check the Varnish ping URL on each web server (/util/ping.php?node=web) and NOT finding "FAIL" in source content to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_url_varnish_ping
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'localhost' -p 80 -u '/util/ping.php?node=web' --invert-regex 'FAIL' -w 5 -c 10 -t 30
        }


        #=============================================
        #  Service:  Icinga
        #=============================================
        define service {
                service_description      URL: Icinga Homepage
                servicegroups            url-checks, icinga-checks
                hostgroup_name           icinga
                check_command            check_icinga_homepage
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_icinga_homepage
                notes                    Check the Icinga homepage and look for "icinga" in source content to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_icinga_homepage
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'icinga' -p 80 -u '/icinga' -s 'icinga' -f follow -a {{ icinga_http_usr }}:{{ icinga_http_pwd }} -w 15 -c 30 -t 45
        }


        #=============================================
        #  Service:  Sentry
        #=============================================
        define service {
                service_description      URL: Sentry Homepage
                servicegroups            url-checks
                hostgroup_name           sentry
                check_command            check_sentry_homepage
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_sentry_homepage
                notes                    Check the Icinga homepage and look for "sentry" in source content to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_sentry_homepage
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'sentry' -p 80 -u '/login' -s 'sentry' -f follow -w 15 -c 30 -t 45
        }


        #=============================================
        #  Service:  Graphite
        #=============================================
        define service {
                service_description      URL: Graphite Homepage
                servicegroups            url-checks
                hostgroup_name           graphite
                check_command            check_graphite_homepage
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_graphite_homepage
                _jnag_image              images/web.png
                notes                    Check the Graphite homepage
                use                      default-service-with-graph
        }
        define command {
                command_name             check_graphite_homepage
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'graphite' -p 8080 -u '/' -f follow -w 15 -c 30 -t 45
        }


        #=============================================
        #  Service:  GDash
        #=============================================
        define service {
                service_description      URL: GDash Homepage
                servicegroups            url-checks
                hostgroup_name           graphite
                check_command            check_gdash_homepage
                _graphiteprefix          icinga.url_checks
                _graphitepostfix         url_gdash_homepage
                _jnag_image              images/web.png
                notes                    Check the GDash homepage and look for "Dashboard" in source content to consider the page succesfully rendered
                use                      default-service-with-graph
        }
        define command {
                command_name             check_gdash_homepage
                command_line             $USER1$/check_http -I '$HOSTADDRESS$' -H 'gdash' -p 80 -u '/' -s 'Dashboard' -f follow -w 15 -c 30 -t 45
        }
