---
- name: Create Sentry folder
  file:
    path=/opt/sentry
    state=directory
    owner=root
    group=root


# MySQL Sentry changes
- name: MySQL create sentry db
  shell: "mysql -e \"CREATE DATABASE IF NOT EXISTS {{ sentry_sql_db }};\""
  ignore_errors: yes

- name: MySQL create sentry username
  shell: "mysql -e \"GRANT USAGE ON *.* TO '{{ sentry_sql_usr }}'@'localhost' IDENTIFIED BY '{{ sentry_sql_pwd }}';\""
  ignore_errors: yes

- name: MySQL grant rights to sentry user
  shell: "mysql -e \"GRANT ALL PRIVILEGES ON {{ sentry_sql_db }}.* TO '{{ sentry_sql_usr }}'@'localhost';\""
  ignore_errors: yes


# Install pre-requisites
- name: Install pre-requisites packages
  apt:
    pkg={{ item }}
    state=present
  with_items:
  - build-essential
  - python-dev
  - python-virtualenv
  - python-pip
  - libevent-dev
  - libmysqlclient-dev
  - libmemcached-dev

- name: Install Sentry dependencies
  pip:  name={{ item }} virtualenv=/opt/sentry
  with_items:
     - amqp==1.0.13
     - anyjson==0.3.3
     - greenlet==0.4.3
     - kombu==2.5.16
     - pylibmc==1.3.0
     - requests==2.3.0
     - six==1.7.3
     - BeautifulSoup==3.2.1
     - billiard==2.7.3.34
     - celery==3.0.25
     - cssutils==0.9.10
     - dictshield==0.4.4
     - django-pylibmc==0.5.0
     - email_reply_parser==0.2.0
     - eventlet==0.15.0
     - gunicorn==0.17.4
     - httpagentparser==1.2.2
     - httplib2==0.9
     - logan==0.5.10
     - MySQL_python==1.2.5
     - nydus==0.10.7
     - oauth2==1.5.211
     - Pygments==1.6
     - pynliner==0.5.1
     - python_dateutil==1.5
     - python_memcached==1.53
     - python_openid==2.2.5
     - pytz==2014.4
     - pyvotal==0.2.1
     - raven==5.0.0
     - redis==2.8.0
     - setproctitle==1.1.8
     - simplejson==3.3.3
     - South==0.8.2
     - urllib3==1.7.1

     # - django-pylibmc==0.5.0
     # - eventlet
     # - python-memcached==1.53

     # - Django==1.5.8
     # - django_celery==3.0.23
     # - django_crispy_forms==1.2.8
     # - django_paging==0.2.5
     # - django_picklefield==0.3.1
     # - django_pylibmc==0.5.0
     # - django_social_auth==0.7.28
     # - django_static_compiler==0.3.3
     # - django_templatetag_sugar==0.1
  notify:
  - reload sentry http
  - reload sentry udp

- name: Install Sentry
  pip:
    name={{ item }}
    virtualenv=/opt/sentry
  with_items:
  - sentry[mysql]==6.4.4
  notify:
  - reload sentry http
  - reload sentry udp

- name: Copy Sentry HTTP and UDP startup scripts
  copy:
    src=opt/sentry/{{ item }}
    dest=/opt/sentry/
    owner=root
    group=root
    mode=0755
  with_items:
  - sentry_http.sh
  - sentry_udp.sh
  notify:
  - reload sentry http
  - reload sentry udp

# Copy Sentry config
- name: Copy Sentry config
  template:
    src=etc/sentry.conf.py.j2
    dest=/etc/sentry.conf.py
    owner=root
    group=root
    mode=0644
  notify:
  - reload sentry http
  - reload sentry udp


# Symlink for admin site
- name: Symlink for admin site
  file:
    src=/opt/sentry/lib/python2.7/site-packages/django/contrib/admin/static/admin
    dest=/opt/sentry/lib/python2.7/site-packages/sentry/static/admin
    owner=root
    group=root
    state=link

# Post-install upgrade
- name: Run Post-installation MySQL Upgrade
  shell: >
    /opt/sentry/bin/sentry --config=/etc/sentry.conf.py upgrade --noinput
  ignore_errors: yes
  tags: sentry


# Bootstrap Sentry Install
- name: Check if django superuser exists
  shell: "mysql -e \"SELECT uuu.username FROM sentry.auth_user AS uuu WHERE uuu.username='{{ sentry_admin_user }}';\""
  ignore_errors: yes
  register: superuser
  tags: bootstrap

- name: Copy bootstrap files
  template:
    src={{ files_dir }}/opt/sentry/bootstrap.py.j2
    dest=/opt/sentry/bootstrap.py
    owner=root
    group=root
    mode=0755
  when: superuser.stdout.find('{{ sentry_admin_user }}') == -1
  tags: bootstrap

- name: Call Bootstrap script
  shell: source bin/activate && export SENTRY_CONF=/etc/sentry.conf.py && python bootstrap.py chdir=/opt/sentry/ executable=/bin/bash
  ignore_errors: yes
  when: superuser.stdout.find('{{ sentry_admin_user }}') == -1
  tags:
     - bootstrap
     - sentry

- name: Remove bootstrap file
  file:
    path=/opt/sentry/bootstrap.py
    state=absent
  when: superuser.stdout.find('{{ sentry_admin_user }}') == -1
  tags: bootstrap

- name: Run sentry repair command on database
  shell: "/opt/sentry/bin/sentry --config=/etc/sentry.conf.py repair --owner={{ sentry_admin_user }}"
  when: superuser.stdout.find('{{ sentry_admin_user }}') == -1
  ignore_errors: yes
  tags: bootstrap

- name: Set default site
  shell: "mysql -e \"UPDATE sentry.django_site SET domain='refinery29.com', name='refinery29.com' WHERE id=1;\""
  ignore_errors: yes
  tags: bootstrap


# Fix bug where /account/settings/notifications/ raises an error due to missing info for Sentry's internal project
# More info here: https://github.com/getsentry/sentry/issues/960
- name: Update owner and team for internal Sentry project
  shell: "mysql -e \"UPDATE sentry.sentry_project SET owner_id=1, team_id=1 WHERE id=1;\""
  ignore_errors: yes
  register: superuser


- name: Install Sentry Plugins
  pip:  name={{ item }} virtualenv=/opt/sentry
  with_items:
  - sentry-github==0.1.2
  - sentry-graphite==0.1.0
  - sentry-hipchat==0.5.0
  - sentry-mailagain==1.0
  - sentry-pivotal==0.1.0
  - sentry-searchbutton==0.1.0
  - nagios-sentry==0.3
  notify:
  - reload sentry http
  - reload sentry udp
