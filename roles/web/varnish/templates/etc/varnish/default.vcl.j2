# {{ ansible_managed }}
#
# This is a basic VCL configuration file for varnish.  See the vcl(7)
# man page for details on VCL syntax and semantics.
#
# Refinery 29 Varnish config
#
# https://www.varnish-cache.org/docs/3.0/
# https://www.varnish-software.com/static/book/VCL_Basics.html

### Varnish config hack for logging
C{
        #include <syslog.h>
}C

### WEBS

backend web12 {
  .host = "web12.r29";
  .port = "80";
  .probe = {
    .url = "/util/ping.php?node=web";
    .interval  = 30s;
    .timeout   = 10s;
    .window    = 5;
    .threshold = 3;
  }
}
backend web13 {
  .host = "web13.r29";
  .port = "80";
  .probe = {
    .url = "/util/ping.php?node=web";
    .interval  = 30s;
    .timeout   = 10s;
    .window    = 5;
    .threshold = 3;
  }
}
backend web14 {
  .host = "web14.r29";
  .port = "80";
  .probe = {
    .url = "/util/ping.php?node=web";
    .interval  = 30s;
    .timeout   = 10s;
    .window    = 5;
    .threshold = 3;
  }
}
backend web15 {
  .host = "web15.r29";
  .port = "80";
  .probe = {
    .url = "/util/ping.php?node=web";
    .interval  = 30s;
    .timeout   = 10s;
    .window    = 5;
    .threshold = 3;
  }
}
backend web16 {
  .host = "web16.r29";
  .port = "80";
  .probe = {
    .url = "/util/ping.php?node=web";
    .interval  = 30s;
    .timeout   = 10s;
    .window    = 5;
    .threshold = 3;
  }
}

backend app01 {
  .host = "app01.r29";
  .port = "80";
  .connect_timeout = 30s;
  .first_byte_timeout = 30s;
  .between_bytes_timeout = 120s;
  .probe = {
    .url = "/util/ping.php?node=web";
    .interval  = 30s;
    .timeout   = 10s;
    .window    = 5;
    .threshold = 3;
  }
}

backend app02 {
  .host = "app02.r29";
  .port = "80";
  .connect_timeout = 30s;
  .first_byte_timeout = 30s;
  .between_bytes_timeout = 120s;
  .probe = {
    .url = "/util/ping.php?node=web";
    .interval  = 30s;
    .timeout   = 10s;
    .window    = 5;
    .threshold = 3;
  }
}

### API

backend api04 {
  .host = "api04.r29";
  .port = "80";
  .probe = {
    .url = "/util/ping.php?node=web";
    .interval  = 30s;
    .timeout   = 10s;
    .window    = 5;
    .threshold = 3;
  }
}
backend api05 {
  .host = "api05.r29";
  .port = "80";
  .probe = {
    .url = "/util/ping.php?node=web";
    .interval  = 30s;
    .timeout   = 10s;
    .window    = 5;
    .threshold = 3;
  }
}
backend api06 {
  .host = "api06.r29";
  .port = "80";
  .probe = {
    .url = "/util/ping.php?node=web";
    .interval  = 30s;
    .timeout   = 10s;
    .window    = 5;
    .threshold = 3;
  }
}

### DIRECTORS

director web_pool round-robin {
  { .backend = web12; }
  { .backend = web13; }
  { .backend = web14; }
  { .backend = web15; }
  { .backend = web16; }
}

director dash_pool round-robin {
  { .backend = app01; }
  { .backend = app02; }
}

director api_pool round-robin {
  {
    .backend = api04;
  }
  {
    .backend = api05;
  }
  {
    .backend = api06;
  }
}

acl purgers {
  "127.0.0.1";
  "10.42.66.205";
  "10.42.66.201";
  "10.42.66.221";
}

### Brombone Servers
backend brombone_desktop {
  .host = "refinery29.brombonesnapshots.com";
  .port = "80";
}
backend brombone_mobile {
  .host = "refinery29mobile.brombonesnapshots.com";
  .port = "80";
}

sub vcl_recv {

  # Reloaded pages come in as max-age=0, serve those from cache
  # <shift> or <ctrl> reload requests come in with a 'Cache-Control: no-cache' header
  # So those requests are not affected and still come all the way in to Origin
  if (req.http.Cache-Control == "max-age=0" && !(req.http.host ~ "^(new)?dash\.refinery29\.com$" )) {
    unset req.http.Cache-Control;
    unset req.http.Cookie;
    C{
      syslog(LOG_INFO, "unsetting Cache-Control max-age=0 for: %s%s",
             VRT_GetHdr(sp, HDR_REQ, "\005host:"),
             VRT_r_req_url(sp));
    }C
  }

  ######################################
  #
  # Set client director based on User Agent string
  #
  ######################################
  set client.identity = req.http.user-agent;

  ######################################
  #
  # Add X-forwarded for header
  #
  ######################################

  if (!req.http.X-Forwarded-For && client.ip != "127.0.0.1") {
    set req.http.X-Forwarded-For = regsub(client.ip, ":.*", "");
  }

  ######################################
  #
  # Purge handler
  #
  ######################################
  if (req.request == "PURGE") {
    if (!client.ip ~ purgers) {
      C{
        syslog(LOG_NOTICE, "Ignoring unauthorized purge from %s of %s%s",
               VRT_IP_string(sp, VRT_r_client_ip(sp)), VRT_GetHdr(sp, HDR_REQ, "\005host:"), VRT_r_req_url(sp));
      }C
      error 405 "Method not allowed";
    }
    C{
      syslog(LOG_NOTICE, "purging %s%s", VRT_GetHdr(sp, HDR_REQ, "\005host:"), VRT_r_req_url(sp));
    }C
    return (lookup);
  }

  ######################################
  #
  # Monitoring
  #
  ######################################
  if (req.url == "/ping") {
    error 843 "OK";
  }

  ######################################
  #
  # Handle refinery29.uk
  #
  ######################################

  if (req.http.host ~ "^refinery29\.uk$") {
    set req.http.host = "www.refinery29.uk";
    error 705;
  }

  if (req.http.host ~ "^www\.refinery29\.uk$") {
    set req.http.host = "www.refinery29.com";
    set req.http.X-Country-Code = "uk";
  }

  ######################################
  #
  # Redirect refinery29.com/something links
  #
  ######################################

  if (req.http.host ~ "^refinery29\.com$") {
    set req.http.host = "www.refinery29.com";
    error 705;
  }

  ######################################
  #
  # 'Temporary' Redirects
  #
  ######################################

  if (req.http.host ~ "^(www\.)?madewell\.refinery29\.com$") {
    error 750 "http://www.refinery29.com/contests/madewell-jeans-journey/";
  }

  # Redirect to style blogger
  if (req.http.host ~ "^(www\.)?styleblogger\.refinery29\.com$") {
    error 750 "http://www.refinery29.com/styleblogger";
  }

  if (req.http.host ~ "^boutiques\.refinery29\.com$") {
    error 750 "http://www.refinery29.com/shops/?utm_source=boutiques";
  }

  # Stop pipeline and reserve from making it to the web servers, rewrite them here
  if (req.http.host ~ "^reserve\.refinery29\.com$") {
    set req.http.host = "www.refinery29.com";

    error 750 "http://www.refinery29.com/shops/?utm_source=reserve";
  }
  if (req.http.host ~ "^pipeline\.refinery29\.com$") {
    set req.http.host = "www.refinery29.com";

    error 750 "http://www.refinery29.com/?utm_source=pipeline";
  }

  # Squash this new cache buster
  set req.url = regsub(req.url, "[?&]dclid=..........................", "");

  # Send HTTPS robots.txt requests to robots_ssl.txt
  if (req.http.X-Forwarded-Proto == "https" && req.url == "/robots.txt") {
    error 750 "https://www.refinery29.com/robots_ssl.txt";
  }

  ######################################
  #
  # Lost clients, ie not matching allowed domains
  # api.refinery29.com
  # dash.refinery29.com
  # feed.refinery29.com
  # preview.refinery29.com
  # static.refinery29.com
  # www.refinery29.com
  # s[1-4].r29static.com
  #
  ######################################

  if (req.http.host ~ "^static[0-9]+\.refinery29\.com$" || req.http.host ~ "^s[1-4]\.r29static\.com$") {
    set req.http.host   = "static.refinery29.com";
  }

  if ( ! req.http.host ~ "^(newdash|api|dash|feed|preview|static|www)\.refinery29\.com$") {
    set req.http.host = "www.refinery29.com";

    error 705;
  }

  ######################################
  #
  # Blocks and Bans
  #
  ######################################

  if (req.http.User-Agent == "Zend_Http_Client") {
    error 401 "You are banned from this site.";
  }
  if (req.url ~ "ckeditor/editor/filemanager") {
    error 401 "Request not allowed";
    C{
      syslog(LOG_NOTICE, "Sending 401 to %s for %s%s",
             VRT_IP_string(sp, VRT_r_client_ip(sp)), VRT_GetHdr(sp, HDR_REQ, "\005host:"), VRT_r_req_url(sp));
    }C
  }

  ######################################
  #
  # Track bot visits
  #  (google|yahoo|bing|baidu|jeeves|facebook|twitterbot|linkedin)
  ######################################

  if (req.http.User-Agent ~ "(?i)(google|yahoo|bing|baidu|jeeves|facebook|twitterbot|linkedin)") {
    if (! (req.http.X-R29-Brombone ~ "brombone")) {
      # New request
      # We got a hit from a bot, Check to see if its a mobile bot
      if (req.http.User-Agent ~ "(?i)(iphone|android)" ) {
        C{
          syslog(LOG_INFO, "bot hit sending to brombone mobile: %s to: %s%s",
                 VRT_GetHdr(sp, HDR_REQ, "\013User-Agent:"),
                 VRT_GetHdr(sp, HDR_REQ, "\005host:"),
                 VRT_r_req_url(sp));
        }C

        set req.http.X-R29-Brombone = "brombone_mobile";
        set req.backend = brombone_mobile;
        # comment this out so the brombone lookup fails
        #set req.http.host = "refinery29mobile.brombonesnapshots.com";
      } else {
        C{
          syslog(LOG_INFO, "bot hit sending to brombone desktop: %s to: %s%s",
                 VRT_GetHdr(sp, HDR_REQ, "\013User-Agent:"),
                 VRT_GetHdr(sp, HDR_REQ, "\005host:"),
                 VRT_r_req_url(sp));
        }C

        set req.http.X-R29-Brombone = "brombone_desktop";
        set req.backend = brombone_desktop;
        # comment this out so the brombone lookup fails
        #set req.http.host = "refinery29.brombonesnapshots.com";
      }

      # We got a bot hit, so send it along to Brombone
      set req.url = regsub(req.url, "^/", "/www.refinery29.com/");
      return(pass);
    } else {
      # 404'ed request
      C{
        syslog(LOG_INFO, "bot hit sending to origin: %s to: %s%s",
               VRT_GetHdr(sp, HDR_REQ, "\013User-Agent:"),
               VRT_GetHdr(sp, HDR_REQ, "\005host:"),
               VRT_r_req_url(sp));
      }C
    }
  }
  if (req.http.X-Crawl-Request == "brombone") {
    C{
      syslog(LOG_INFO, "brombone hit: %s to: %s%s",
             VRT_GetHdr(sp, HDR_REQ, "\013User-Agent:"),
             VRT_GetHdr(sp, HDR_REQ, "\005host:"),
             VRT_r_req_url(sp));
    }C
  }

  if ( req.http.host ~ "^www\.refinery29\.com$") {

    ######################################
    #
    # Redirect /index.php to /
    #
    ######################################

    if (req.url ~ "^/index\.php") {
      error 750 "/";
    }

    ######################################
    #
    # Remove .php
    #
    ######################################

    if (req.url ~ "^/[a-z0-9\-\_]+\.php") {

      set req.url = regsub(
        req.url,
        "^/(.*)\.php",
        "/\1"
      );

      # Replace _ with -
      set req.url = regsuball(
        req.url,
        "[_]",
        "-"
      );

      error 750 req.url;

    }
  }


  ######################################
  #
  # Global modifiers
  #
  ######################################

  # Old cached files can live for 5 minutes.
  set req.grace = 5m;
  # Set this once at the top and then it can be over written if needed
  set req.backend = web_pool;
  # Our cache warmer always "misses"
  if (req.http.User-Agent == "R29-Robot") {
    set req.hash_always_miss = true;
  }

  ######################################
  #
  # Mappings
  #
  ######################################

  # API requests are passed
  #
  if (req.http.host ~ "^api\.refinery29\.com$") {
    set req.backend = api_pool;
    return(pass);
  }

  if (req.url ~ "^/api/2/feeds/") {
    set req.backend   = api_pool;
    set req.http.host = "feed.refinery29.com";
    return(lookup);
  }

  if (req.url ~ "^/api/" && ! req.url ~ "^/api/2/feeds/") {
    set req.backend   = api_pool;
    set req.http.host = "api.refinery29.com";

    set req.url = regsub(
      req.url,
      "^/api/",
      "/"
    );

    return(pass);
  }

  if (req.url ~ "^/login/") {
    set req.backend   = api_pool;
    return(pass);
  }

  # Preview requests are passed without caching
  #
  if (req.http.host ~ "^preview\.refinery29\.com$") {
    return(pass);
  }

  # Stat requests are passed without caching
  #
  if (req.http.host ~ "^stat\.refinery29\.com$") {
    set req.backend = api_pool;

    return(pass);
  }
  # requests to the stat method from other domains pass too
  if (req.url ~ "^/stats") {
    set req.backend   = api_pool;
    set req.http.host = "api.refinery29.com";

    set req.url = regsub(
      req.url,
      "^/stats",
      "/"
    );

    return(pass);
  }

  # Static requests are lookup
  #
  if (req.http.host ~ "^static\.refinery29\.com$") {
    return(lookup);
  }
  if (req.url ~ "^/static/bin/") {
    return(lookup);
  }
  if (req.url ~ "^/static/blog/") {
    set req.http.host = "www.refinery29.com";
    return(lookup);
  }

  # No cache on dash
  if (req.http.host ~ "^newdash\.refinery29\.com$") {
    set req.backend   = dash_pool;
    set req.http.host = "dash.refinery29.com";
    return(pass);
  }

  if (req.http.host ~ "^dash\.refinery29\.com$") {
    set req.backend   = dash_pool;
    return(pass);
  }

  # Mapping to files.refinery29.com
  if ( req.http.host ~ "^www\.refinery29\.com$") {
    if (req.url ~ "^/(music\_mp3)/") {
      set req.http.host = "files.refinery29.com";
      error 705;
    }
  }

  # Mapping for the rocketship
  if ( req.http.host ~ "^(www|feed)\.refinery29\.com$") {
    if (req.url ~ "^/shops/(api|rf29json)/") {
      set req.backend   = api_pool;
    }
  }

  if (req.http.host ~ "^(www|feed)\.refinery29\.com$") {

    if (req.request != "GET") {
      return(pass);
    }

    # Bypass cache for people with http cookie R29_UID (Logged in users)
    if (req.http.Cookie) {
      if (req.http.Cookie ~ "R29_UID=[0-9]+") {
        return(pass);
      }
      unset req.http.Cookie;
    }
    return(lookup);
  }

  # We got here, so this request didn't match anything in vcl_recv()
  C{
    syslog(LOG_NOTICE, "recv exit %s%s",
           VRT_GetHdr(sp, HDR_REQ, "\005host:"), VRT_r_req_url(sp));
  }C

}

sub vcl_pipe {
  set req.http.connection = "close";
  return (pipe);
}

sub vcl_pass {
  if (req.request == "PURGE") {
    error 502 "PURGE on a passed object";
  }
  return (pass);
}

sub vcl_hit {
  if (req.request == "PURGE") {
    purge;
    error 200 "Purged";
  }
}

sub vcl_hash {

  hash_data(req.http.host);

  # Kill utm params for cache lookup
  hash_data(regsub(req.url, "[?&]utm_[a-z]*=[^&]*", ""));

  # Kill js cache busting, bust the browser cache, not ours
  hash_data(regsub(req.url, "[?&]_=[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]", ""));

  return (hash);
}

sub vcl_miss {
  if (req.request == "PURGE") {
    purge;
    error 404 "Not in cache";
  }
  return (fetch);
}

sub vcl_fetch {
  #Important stuff here
  set beresp.http.X-Powered-By = "Love and firewall {{ ansible_hostname }}";

  # If it wasn't in brombone retry from our origin
  if (beresp.status == 404 && req.http.X-R29-Brombone ~ "brombone" ) {
    set req.url = regsub(req.url, "^/www.refinery29.com/", "/");
    return(restart);
  }

  # If it wasn't on the feed, try www before sending them on their way
  if (beresp.status == 404 && req.http.host == "feed.refinery29.com") {
    set req.http.host = "www.refinery29.com";
    return(restart);
  }

  # Never set r29_version in production
  if (req.http.host ~ "^(www|feed)\.refinery29\.com$" && beresp.http.set-cookie ~ "r29_version") {
    unset beresp.http.set-cookie;
  }

  # Log when we set r29comstore
  if (beresp.http.set-cookie ~ "r29comstore") {
    C{
      syslog(LOG_NOTICE, "fetch returning r29comstore set-cookie for %s%s",
             VRT_GetHdr(sp, HDR_REQ, "\005host:"), VRT_r_req_url(sp));
    }C
  }

  # If the backend give us cache hints, honor them
  if (beresp.http.Cache-Control ~ "(no-cache|no-store|private)") {
    unset beresp.http.expires;
    return(hit_for_pass);
  }
  if (beresp.http.Pragma ~ "nocache") {
    return(hit_for_pass);
  }

}

sub vcl_deliver {
  if (resp.http.magicmarker) {
    /* Remove the magic marker */
    unset resp.http.magicmarker;
    C{
      syslog(LOG_NOTICE, "deliver response contained magic marker %s%s",
             VRT_GetHdr(sp, HDR_REQ, "\005host:"), VRT_r_req_url(sp));
    }C
    /* By definition we have a fresh object */
    set resp.http.age = "0";
  }

  # Remove headers for hashing reasons
  unset resp.http.Via;
  unset resp.http.X-Newrelic-App-Data;
  unset resp.http.X-Varnish;
  # Remove this one, but EdgeCast will add it back sometimes
  unset resp.http.X-Cache;
}


sub vcl_error {

   if (obj.status == 843) {
      set obj.status = 200;
      set obj.http.Content-Type = "text/html; charset=utf-8";
      synthetic {"PONG: {{ ansible_hostname }}"};
      return(deliver);
    }

    if (obj.status == 705) {
      set obj.http.Location = "http://" + req.http.host + req.url;
      set obj.status = 301;
      return(deliver);
    }

    if (obj.status == 750) {
      set obj.http.Location = obj.response;
      set obj.status        = 301;
      return(deliver);
    }

    if (obj.status == 503) {

      C{
        syslog(LOG_NOTICE, "Sending 503 response to %s for %s%s",
               VRT_IP_string(sp, VRT_r_client_ip(sp)), VRT_GetHdr(sp, HDR_REQ, "\005host:"), VRT_r_req_url(sp));
      }C

      set obj.http.Content-Type = "text/html; charset=utf-8";
      set obj.http.Pragma        = "no-cache";

    synthetic {"
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" xmlns:fb="http://www.facebook.com/2008/fbml" xmlns:og="http://opengraphprotocol.org/schema/">
  <head>
    <title>Refinery29 is Down for Maintenance</title>
  <style>

    .whoops {
      width: 1240px;
      margin: 0 auto;
      height: 660px;
      position: relative;
      top: 50px;
    }

    img.r29 {
      margin-top: 75px;
    }

    p {
      font-family: Georgia, Times, serif;
      font-style: italic;
      margin-top: 15px;
    }

  </style>

  </head>

  <body>
    <div class="whoops">
      <img class="r29" src="http://wac.b7b0.edgecastcdn.net/00B7B0/pub/MaintenancePage.gif" width="1240" height="660" alt="Refinery29" />
    </div>

  </body>
</html>"};
    }
    return (deliver);
}
